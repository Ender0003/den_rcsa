// /app/registration/page.js

"use client"
import { useState } from "react";
import { Input } from "@/components/ui/input";
// –Ü–º–µ–Ω–æ–≤–∞–Ω–∏–π —ñ–º–ø–æ—Ä—Ç (—è–∫ –º–∏ –≤–∏–ø—Ä–∞–≤–ª—è–ª–∏ —Ä–∞–Ω—ñ—à–µ)
import { Button } from "@/components/ui/button"; 
// üëá –ù–û–í–ò–ô –Ü–ú–ü–û–†–¢
import { PasswordInput } from "@/components/ui/PasswordInput"; 


export default function Registration() {
  const [form, setForm] = useState({
    name: "",
    email: "",
    password: "",
    confirmPassword: "",
  });

  const [errors, setErrors] = useState({});
  const [success, setSuccess] = useState(false);

  // –§—É–Ω–∫—Ü—ñ—è –≤–∞–ª—ñ–¥–∞—Ü—ñ—ó (–≤–∏–∫–ª–∏–∫–∞—î—Ç—å—Å—è –ª–∏—à–µ –ø—Ä–∏ –≤—ñ–¥–ø—Ä–∞–≤—Ü—ñ)
  const validate = () => {
    const newErrors = {};

    if (form.name.trim().length < 2) {
      newErrors.name = "–Ü–º'—è –º–∞—î –º—ñ—Å—Ç–∏—Ç–∏ —â–æ–Ω–∞–π–º–µ–Ω—à–µ 2 —Å–∏–º–≤–æ–ª–∏.";
    }

    if (!/^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(form.email)) {
      newErrors.email = "–í–≤–µ–¥—ñ—Ç—å –∫–æ—Ä–µ–∫—Ç–Ω–∏–π email.";
    }

    if (
      form.password.length < 8 ||
      !/[A-Z]/.test(form.password) ||
      !/\d/.test(form.password)
    ) {
      newErrors.password =
        "–ü–∞—Ä–æ–ª—å –º–∞—î –º—ñ—Å—Ç–∏—Ç–∏ —â–æ–Ω–∞–π–º–µ–Ω—à–µ 8 —Å–∏–º–≤–æ–ª—ñ–≤, 1 –≤–µ–ª–∏–∫—É –ª—ñ—Ç–µ—Ä—É —Ç–∞ 1 —Ü–∏—Ñ—Ä—É.";
    }

    if (form.password !== form.confirmPassword) {
      newErrors.confirmPassword = "–ü–∞—Ä–æ–ª—ñ –Ω–µ –∑–±—ñ–≥–∞—é—Ç—å—Å—è.";
    }

    setErrors(newErrors);
    return Object.keys(newErrors).length === 0;
  };

  const handleSubmit = (e) => {
    e.preventDefault();
    setSuccess(false);
    if (validate()) {
      setSuccess(true);
      console.log("‚úÖ –î–∞–Ω—ñ —Ñ–æ—Ä–º–∏:", form);
      // –û—á–∏—â–µ–Ω–Ω—è —Ñ–æ—Ä–º–∏ –ø—Ä–∏ —É—Å–ø—ñ—Ö—É
      setForm({ name: "", email: "", password: "", confirmPassword: "" }); 
    }
  };

  const handleChange = (e) => {
    const { name, value } = e.target;
    const updatedForm = { ...form, [name]: value };
    
    // 1. –û–Ω–æ–≤–ª–µ–Ω–Ω—è —Å—Ç–∞–Ω—É —Ñ–æ—Ä–º–∏
    setForm(updatedForm);
    
    // 2. –û—á–∏—â–µ–Ω–Ω—è –ø–æ—Ç–æ—á–Ω–æ—ó –ø–æ–º–∏–ª–∫–∏
    let currentErrors = { ...errors, [name]: "" };
    
    // 3. –î–æ–¥–∞—Ç–∫–æ–≤–∞ –≤–∞–ª—ñ–¥–∞—Ü—ñ—è –¥–ª—è —à–≤–∏–¥–∫–æ—ó —Ä–µ–∞–∫—Ü—ñ—ó –∫–Ω–æ–ø–∫–∏
    // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –ø–æ–º–∏–ª–∫–∏, —è–∫—ñ –º–æ–≥–ª–∏ –≤–∏–Ω–∏–∫–Ω—É—Ç–∏ –ø—Ä–∏ –∑–º—ñ–Ω—ñ.
    if (name === 'password' || name === 'confirmPassword') {
        if (updatedForm.password !== updatedForm.confirmPassword) {
            currentErrors.confirmPassword = "–ü–∞—Ä–æ–ª—ñ –Ω–µ –∑–±—ñ–≥–∞—é—Ç—å—Å—è.";
        } else {
            // –í–∏–¥–∞–ª—è—î–º–æ –ø–æ–º–∏–ª–∫—É –Ω–µ—Å–ø—ñ–≤–ø–∞–¥—ñ–Ω–Ω—è, —è–∫—â–æ –ø–∞—Ä–æ–ª—ñ –∑–±—ñ–≥–∞—é—Ç—å—Å—è
            delete currentErrors.confirmPassword;
        }

        if (name === 'password') {
            if (updatedForm.password.length < 8 || !/[A-Z]/.test(updatedForm.password) || !/\d/.test(updatedForm.password)) {
                // –Ø–∫—â–æ —î –ø–æ–º–∏–ª–∫–∞ –≤–∞–ª—ñ–¥–∞—Ü—ñ—ó –ø–∞—Ä–æ–ª—è
                currentErrors.password = "–ü–∞—Ä–æ–ª—å –º–∞—î –º—ñ—Å—Ç–∏—Ç–∏ —â–æ–Ω–∞–π–º–µ–Ω—à–µ 8 —Å–∏–º–≤–æ–ª—ñ–≤, 1 –≤–µ–ª–∏–∫—É –ª—ñ—Ç–µ—Ä—É —Ç–∞ 1 —Ü–∏—Ñ—Ä—É.";
            } else {
                // –í–∏–¥–∞–ª—è—î–º–æ –ø–æ–º–∏–ª–∫—É, —è–∫—â–æ –ø–∞—Ä–æ–ª—å —Å—Ç–∞–≤ –∫–æ—Ä–µ–∫—Ç–Ω–∏–º
                delete currentErrors.password;
            }
        }
    }
    setErrors(currentErrors);
  };


  return (
    <div className="max-w-md mx-auto mt-10 p-6 border rounded-2xl shadow-md bg-white">
      <h1 className="text-2xl font-bold mb-6 text-center">–†–µ—î—Å—Ç—Ä–∞—Ü—ñ—è</h1>
      
      {/* –¢–∏–º—á–∞—Å–æ–≤–∏–π –≤–∏–≤—ñ–¥ –ø–æ–º–∏–ª–æ–∫ –¥–ª—è –Ω–∞–ª–∞–≥–æ–¥–∂–µ–Ω–Ω—è */}
      {/* <pre className="text-red-500 text-sm mb-4">{JSON.stringify(errors, null, 2)}</pre> */}

      <form onSubmit={handleSubmit}>
        <Input
          label="–Ü–º'—è"
          name="name"
          value={form.name}
          onChange={handleChange}
          error={errors.name}
        />
        <Input
          label="Email"
          name="email"
          type="email"
          value={form.email}
          onChange={handleChange}
          error={errors.email}
        />
        
        {/* üëá –í–ò–ö–û–†–ò–°–¢–ê–ù–ù–Ø PasswordInput */}
        <PasswordInput
          label="–ü–∞—Ä–æ–ª—å"
          name="password"
          value={form.password}
          onChange={handleChange}
          error={errors.password}
        />
        <PasswordInput
          label="–ü—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è –ø–∞—Ä–æ–ª—è"
          name="confirmPassword"
          value={form.confirmPassword}
          onChange={handleChange}
          error={errors.confirmPassword}
        />
        {/* üëÜ –ë–ï–ó isPasswordToggle, showPassword —ñ —Ç.–¥. */}

        <Button 
          type="submit" 
          // –ö–Ω–æ–ø–∫–∞ –Ω–µ–∞–∫—Ç–∏–≤–Ω–∞, —è–∫—â–æ —î –±—É–¥—å-—è–∫—ñ –ø–æ–º–∏–ª–∫–∏
          disabled={Object.keys(errors).some(key => errors[key] !== "")}
        >
          –ó–∞—Ä–µ—î—Å—Ç—Ä—É–≤–∞—Ç–∏—Å—è
        </Button>

        {success && (
          <p className="text-green-600 text-center mt-4">
            ‚úÖ –†–µ—î—Å—Ç—Ä–∞—Ü—ñ—è —É—Å–ø—ñ—à–Ω–∞!
          </p>
        )}
      </form>
    </div>
  );
}